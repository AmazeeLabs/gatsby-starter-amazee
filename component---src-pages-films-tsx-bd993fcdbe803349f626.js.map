{"version":3,"sources":["webpack:///./src/components/containers/List/index.tsx","webpack:///./src/components/pages/films/FilmsPage/index.tsx","webpack:///./src/pages/films.tsx"],"names":["List","items","length","map","item","key","id","className","to","path","noLinkStyles","label","FilmsPage","data","t","useTranslation","OneColumn","Meta","description","Title","api","allFilms","film","title","query","withPageWrapper"],"mappings":"2FAAA,qCAqCeA,IAtBV,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACHA,EAAMC,OACJ,4BACGD,EAAME,KAAI,SAACC,GAAD,OACT,wBACEC,IAAKD,EAAKE,GACVC,UAAU,2DAEV,kBAAC,IAAD,CACEC,GAAIJ,EAAKK,KACTF,UAAU,oCACVG,cAAY,GAEXN,EAAKO,YAMd,uBAAGJ,UAAU,sBAAb,uB,oKCPWK,EAjBV,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACEC,EAAMC,cAAND,EACR,OACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,YAAaJ,EAAE,iCACrB,kBAACK,EAAA,EAAD,KAAQL,EAAE,0BACV,kBAACd,EAAA,EAAD,CACEC,MAAOY,EAAKO,IAAIC,SAASlB,KAAI,SAACmB,GAAD,MAAW,CACtChB,GAAIgB,EAAKhB,GACTK,MAAOW,EAAKC,MACZd,KAAM,UAAUa,EAAKhB,W,YCXlBkB,EAAQ,aAeNC,uBAFV,SAAC,GAAD,IAAGZ,EAAH,EAAGA,KAAH,OAAc,kBAAC,EAAD,CAAWA,KAAMA","file":"component---src-pages-films-tsx-bd993fcdbe803349f626.js","sourcesContent":["import React from 'react';\nimport Link from 'components/common/Link';\n\n/**\n * A simple list of links.\n */\nconst List: React.FC<{\n  /**\n   * List item definitions, containing a unique id, a label and a path.\n   */\n  items: {\n    id: string;\n    label: string;\n    path: string;\n  }[];\n}> = ({ items }) =>\n  items.length ? (\n    <ul>\n      {items.map((item) => (\n        <li\n          key={item.id}\n          className=\"border-solid border-gray-300 border-b-2 last:border-b-0\"\n        >\n          <Link\n            to={item.path}\n            className=\"block px-5 py-2 hover:bg-gray-100\"\n            noLinkStyles\n          >\n            {item.label}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p className=\"text-center italic\">No results found.</p>\n  );\n\nexport default List;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport List from 'components/containers/List';\nimport Meta from 'components/common/Meta';\nimport OneColumn from 'components/layouts/OneColumn';\nimport Title from 'components/common/Title';\nimport { FilmListQuery } from 'typings/graphql/build';\n\nconst FilmsPage: React.FC<{\n  data: FilmListQuery;\n}> = ({ data }) => {\n  const { t } = useTranslation();\n  return (\n    <OneColumn>\n      <Meta description={t('api.pages.films.description')} />\n      <Title>{t('api.pages.films.title')}</Title>\n      <List\n        items={data.api.allFilms.map((film) => ({\n          id: film.id,\n          label: film.title,\n          path: `/films/${film.id}`,\n        }))}\n      />\n    </OneColumn>\n  );\n};\n\nexport default FilmsPage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport FilmsPage from 'components/pages/films/FilmsPage';\nimport withPageWrapper from 'hocs/withPageWrapper';\nimport { FilmListQuery } from 'typings/graphql/build';\n\n// By exporting this query, we tell Gatsby to execute it with the context\n// variables provided as arguments and to fill it with the query result.\n// https://www.gatsbyjs.org/docs/page-query/\nexport const query = graphql`\n  query FilmList {\n    api {\n      allFilms {\n        id\n        title\n      }\n    }\n  }\n`;\n\nconst Page: React.FC<{\n  data: FilmListQuery;\n}> = ({ data }) => <FilmsPage data={data} />;\n\nexport default withPageWrapper(Page);\n"],"sourceRoot":""}