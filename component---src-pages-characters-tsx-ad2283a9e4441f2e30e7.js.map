{"version":3,"sources":["webpack:///./src/components/pages/characters/CharactersPage/index.tsx","webpack:///./src/pages/characters.tsx","webpack:///./src/components/containers/List/index.tsx"],"names":["CharactersPage","characters","t","useTranslation","OneColumn","Meta","description","Title","List","items","map","character","id","label","name","path","query","withPageWrapper","data","api","allPersons","length","item","key","className","to","noLinkStyles"],"mappings":"2OA2BeA,EAnBuD,SAAC,GAEjE,IADJC,EACI,EADJA,WAEQC,EAAMC,cAAND,EACR,OACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,YAAaJ,EAAE,sCACrB,kBAACK,EAAA,EAAD,KAAQL,EAAE,+BACV,kBAACM,EAAA,EAAD,CACEC,MAAOR,EAAWS,KAAI,SAACC,GAAD,MAAgB,CACpCC,GAAID,EAAUC,GACdC,MAAOF,EAAUG,KACjBC,KAAM,eAAeJ,EAAUC,W,YCX5BI,EAAQ,aAeNC,uBAFV,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,kBAAC,EAAD,CAAgBjB,WAAYiB,EAAKC,IAAIC,iB,kCCtBxD,qCAqCeZ,IAtBV,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACHA,EAAMY,OACJ,4BACGZ,EAAMC,KAAI,SAACY,GAAD,OACT,wBACEC,IAAKD,EAAKV,GACVY,UAAU,2DAEV,kBAAC,IAAD,CACEC,GAAIH,EAAKP,KACTS,UAAU,oCACVE,cAAY,GAEXJ,EAAKT,YAMd,uBAAGW,UAAU,sBAAb","file":"component---src-pages-characters-tsx-ad2283a9e4441f2e30e7.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport List from 'components/containers/List';\nimport Meta from 'components/common/Meta';\nimport OneColumn from 'components/layouts/OneColumn';\nimport Title from 'components/common/Title';\nimport { CharacterFragment } from '../../../../../typings/graphql/build';\n\nconst CharactersPage: React.FC<{ characters: CharacterFragment[] }> = ({\n  characters,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <OneColumn>\n      <Meta description={t('api.pages.characters.description')} />\n      <Title>{t('api.pages.characters.title')}</Title>\n      <List\n        items={characters.map((character) => ({\n          id: character.id,\n          label: character.name,\n          path: `/characters/${character.id}`,\n        }))}\n      />\n    </OneColumn>\n  );\n};\n\nexport default CharactersPage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport CharactersPage from 'components/pages/characters/CharactersPage';\nimport withPageWrapper from 'hocs/withPageWrapper';\nimport { CharacterListQuery } from '../../typings/graphql/build';\n\n// By exporting this query, we tell Gatsby to execute it with the context\n// variables provided as arguments and to fill it with the query result.\n// https://www.gatsbyjs.org/docs/page-query/\nexport const query = graphql`\n  query CharacterList {\n    api {\n      allPersons {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst Page: React.FC<{\n  data: CharacterListQuery;\n}> = ({ data }) => <CharactersPage characters={data.api.allPersons} />;\n\nexport default withPageWrapper(Page);\n","import React from 'react';\nimport Link from 'components/common/Link';\n\n/**\n * A simple list of links.\n */\nconst List: React.FC<{\n  /**\n   * List item definitions, containing a unique id, a label and a path.\n   */\n  items: {\n    id: string;\n    label: string;\n    path: string;\n  }[];\n}> = ({ items }) =>\n  items.length ? (\n    <ul>\n      {items.map((item) => (\n        <li\n          key={item.id}\n          className=\"border-solid border-gray-300 border-b-2 last:border-b-0\"\n        >\n          <Link\n            to={item.path}\n            className=\"block px-5 py-2 hover:bg-gray-100\"\n            noLinkStyles\n          >\n            {item.label}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p className=\"text-center italic\">No results found.</p>\n  );\n\nexport default List;\n"],"sourceRoot":""}