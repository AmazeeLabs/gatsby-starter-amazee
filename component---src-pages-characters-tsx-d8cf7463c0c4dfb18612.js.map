{"version":3,"sources":["webpack:///./src/pages/characters.tsx","webpack:///./src/components/List/index.tsx"],"names":["AllPeopleQuery","CharactersPage","data","t","useTranslation","className","items","swapi","allPeople","map","person","id","label","name","path","List","length","item","key","to"],"mappings":"qMASaA,EAAiB,aAoCfC,UAhBV,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACEC,EAAMC,cAAND,EACR,OACE,gCACE,sBAAIE,UAAU,QAAQF,EAAE,yBAA0B,eAClD,gBAAC,IAAD,CACEG,MAAOJ,EAAKK,MAAMC,UAAUC,KAAI,SAACC,GAAD,MAAa,CAC3CC,GAAID,EAAOC,GACXC,MAAOF,EAAOG,KACdC,KAAM,eAAeJ,EAAOC,Y,oCCtCtC,4BAiCeI,IAlBV,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAH,OACHA,EAAMU,OACJ,0BACGV,EAAMG,KAAI,SAACQ,GAAD,OACT,sBACEC,IAAKD,EAAKN,GACVN,UAAU,2DAEV,gBAAC,IAAD,CAAMc,GAAIF,EAAKH,KAAMT,UAAU,qCAC5BY,EAAKL,YAMd,qBAAGP,UAAU,sBAAb","file":"component---src-pages-characters-tsx-d8cf7463c0c4dfb18612.js","sourcesContent":["import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { useTranslation } from 'react-i18next';\nimport List from 'components/List';\n\n// By exporting this query, we tell Gatsby to execute it with the context\n// variables provided as arguments and to fill it with the query result.\n// TODO: Learn about Gatsby's GraphQL layer.\n// https://www.gatsbyjs.org/docs/graphql-concepts/\nexport const AllPeopleQuery = graphql`\n  query AllPeopleQuery {\n    swapi {\n      allPeople {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst CharactersPage: React.FC<{\n  data: {\n    swapi: {\n      allPeople: {\n        id: string;\n        name: string;\n      }[];\n    };\n  };\n}> = ({ data }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <h1 className=\"mb-8\">{t('swapi.pages.characters', 'Characters')}</h1>\n      <List\n        items={data.swapi.allPeople.map((person) => ({\n          id: person.id,\n          label: person.name,\n          path: `/characters/${person.id}`,\n        }))}\n      />\n    </>\n  );\n};\n\nexport default CharactersPage;\n","import * as React from 'react';\nimport Link from 'components/Link';\n\n/**\n * A simple list of links.\n */\nconst List: React.FC<{\n  /**\n   * List item definitions, containing a unique id, a label and a path.\n   */\n  items: {\n    id: string;\n    label: string;\n    path: string;\n  }[];\n}> = ({ items }) =>\n  items.length ? (\n    <ul>\n      {items.map((item) => (\n        <li\n          key={item.id}\n          className=\"border-solid border-gray-300 border-b-2 last:border-b-0\"\n        >\n          <Link to={item.path} className=\"block px-5 py-2 hover:bg-gray-100\">\n            {item.label}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p className=\"text-center italic\">No results found.</p>\n  );\n\nexport default List;\n"],"sourceRoot":""}